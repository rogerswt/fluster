% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fluster_methods.R
\name{fluster}
\alias{fluster}
\title{fluster}
\usage{
fluster(
  fcs,
  parameters = NULL,
  nRecursions = 12,
  nclust = NULL,
  merge = TRUE,
  graph = TRUE
)
}
\arguments{
\item{fcs}{The data (either a flowFrame or a flowSet)}

\item{parameters}{The parameters in fcs used for analysis}

\item{nRecursions}{The number of recursions in calculating the fingerprint (default = 12)}

\item{nclust}{The number of clusters you want panoply to make.  If NULL, fluster}

\item{merge}{Logical: should we merge initial clusters based on categorical similarity?
will make a guess as to the "best" number of clusters}

\item{graph}{Logical: should we compute the MST for visualization?}
}
\value{
An object of class 'fluster', with the following elements:
\describe{
\item{mod}{The flowFPModel generated}
\item{centers}{Multivariate bin centers}
\item{graph}{A graph that can be used for visualization}
\item{clustering}{A named list containing cluster membership of the bins}
}
}
\description{
This function wraps most of what's needed.  It computes a fingerprint
model, calculates the multivariate bin centers, clusters them using
hierarchical agglomerative clustering (cluster::ages()), and
creates graph strucures for visualization.

Fluster (\strong{F}ingerprint-based c\strong{luster}ing)
implements a workflow of doing Cytometric Fingerprint (CF) binning of
a flowFrame (or flowSet)
using flowFP to a relatively high resolution (default nRecursions of 12 results
in 4096 bins).  The bin centroids are then computed, using the median value of all
of the events in the bin for each of the included parameters.  Next, these
multivariate bin centroids are clustered using agglommerative hierarchical clustering
(cluster::agnes()).  The resulting data are represented in a graph structure
for visualization and interpretation.
}
\examples{
load(system.file("extdata", "sampled_flowset_young.rda", package = "fluster"))
flust_params = c(7:9, 11:22)
flust_obj = fluster(fs_young, parameters = flust_params)
}
