% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fluster_methods.R
\name{positivity_thresholds}
\alias{positivity_thresholds}
\title{Positivity Thresholds}
\usage{
positivity_thresholds(
  fluster_obj = NULL,
  fcs = NULL,
  parameters = NULL,
  manual_thresholds = NULL,
  show = FALSE,
  show_range = NULL
)
}
\arguments{
\item{fluster_obj}{An existing fluster object, the result of running fluster().}

\item{fcs}{A flowFrame or flowSet.}

\item{parameters}{The parameters you wish to consider.}

\item{manual_thresholds}{A named vector of one or more values that will override
the internally-calculated positivity thresholds.}

\item{show}{Logical.  Should we display the result graphically?}

\item{show_range}{The range of values to include in calculating the kernel
density estimates.}
}
\value{
A fluster object that includes a modality slot.
}
\description{
Given a (high resolution) clustering, calculate, for each marker,
the median and spread of each cluster.  Then, identify the most negative and most
positive (and also tight) clusters.  The positivity threshold will be between
them, closer to the tighter of the two.

We prioritize tight clusters over diffuse clusters by computing a figure of merit,
which is the normalized median value divided by the spread.

NOTE: One of fluster_obj or ff must not be null.  If fluster_obj is null, then
it is calculated from ff.  If fluster_obj is not null, and its internal fcs
object also isn't null, it is used as ff, and the ff argument is ignored.

ALSO NOTE: This function internally de-rails and de-negs the data so that the
kernel density estimates are not confused by rail or excessivley negative events.
This is an experimental feature.
}
